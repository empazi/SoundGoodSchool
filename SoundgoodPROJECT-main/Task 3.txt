Requirement: Show all lessons per month
Solution:
select count(*)individual 
from lesson_record 
where date between '2021-02-01' and '2021-02-28'


Requirement: Show all lessons during a month, depending on type
Solution:
select count(id), type
from lesson_record
where date between '2021-05-01' and '2021-05-30'
group by type


Requirement: Retrieve the average number of lessons per month during the entire year.
Solution: 	
select count(*)/12.0
from lesson_record
where date between '2021-02-01' and '2022-02-01'

Requirement: List all instructors who has given more than a specific number of lessons during the current month. Sum all lessons, independent of type, and sort the result by the number of given lessons.
Solution: 	
create view instructors_working_too_much as 
select count(instructor_id), instructor_id 
from lesson_record 
where date between '2021-02-01' and '2021-02-28' 
group by instructor_id having count(*) > 2 
order by count(*) ASC


Requirement: List all ensembles held during the next week, sorted by music genre and weekday. For each ensemble tell whether it's full booked, has 1-2 seats left or has more seats left. Hint: you might want to use a CASE statement in your query to produce the desired output.
Solution: 	
--Fully booked 
select ensemble.id, ensemble.maximum_number_of_students
from ensemble
full outer join student_ensemble
on student_ensemble.ensemble_id=ensemble.id
where ensemble.date between CURRENT_DATE and (CURRENT_DATE+7) and genre=’desired_genre’
group by ensemble.id
having count(student_ensemble.student_id)=ensemble.maximum_number_of_students

--Having 1 or 2 seats left
select ensemble.id, ensemble.maximum_number_of_students
from ensemble
full outer join student_ensemble
on student_ensemble.ensemble_id=ensemble.id
where ensemble.date between CURRENT_DATE and (CURRENT_DATE+7) and genre=’desired_genre’
group by ensemble.id
having count(student_ensemble.student_id)=(ensemble.maximum_number_of_students-1) OR
count(student_ensemble.student_id)=(ensemble.maximum_number_of_students-2)

--Having more than 2 seats left
select ensemble.id, ensemble.maximum_number_of_students
from ensemble
full outer join student_ensemble
on student_ensemble.ensemble_id=ensemble.id
where ensemble.date between CURRENT_DATE and (CURRENT_DATE+7) and genre=’desired_genre’
group by ensemble.id
having count(student_ensemble.student_id)<(ensemble.maximum_number_of_students-2)



